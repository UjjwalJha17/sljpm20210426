docker create --name busy -it busybox
docker container create --name alpine -it alpine sh
docker container create --name hello -p 80:80 tutum/hello-world

docker container start -ia busy
docker container start -ia alpine
docker container start hello

docker container run -p 80:80 tutum/hello-world  (creates container with random name)
docker container run -p 80:80 nginx  (connects to tty, Ctrl+C to exit)
docker run -p 81:80 nginx   (shorthand command)
docker run --name ngx -p 80:80 -it nginx  (interactive terminal, Ctrl+PQ to leave it running)
docker attach ngx
docker run -d -p 80:80 --name nginx nginx  ( run in the background)
docker run -P --name nginx nginx  ( map exposed ports to random ports on the host)
docker run -d -p 8000-9000:80 nginx  (maps port 80 to any random port between 8000 to 9000 on host)
docker run --restart always -p 80:80 -it nginx

docker run -ti --rm r-base
docker run -ti --rm -v /home/rajesh/git/dockers/trainora-aug/hello-r/:/tmp/ r-base Rscript /tmp/main.R
docker run --name db -e MYSQL_ROOT_PASSWORD=docker -e MYSQL_DATABASE=docker -e MYSQL_USER=docker -e MYSQL_PASSWORD=docker -d mysql:5.6   (provide environment params to the process)
docker run --link db:mysql -e spring.datasource.url=jdbc:mysql://mysql:3306/docker -p 8080:8080 -d rajeshgheware/spring-db:1.0.0
docker run --log-opt max-size=20m --log-opt max-file=5 --link db:mysql -itd -p 8080:80 --name springdb --restart always  -v /tmp/docker/:/tmp/docker/ -e JAVA_OPTS='-Xms1g' -e java.security.egd=file:/dev/./urandom  -e spring.profiles.active=dev  -e spring.datasource.url=jdbc:mysql://mysql:3306/db  -e jasypt.encryptor.password=pwd -e security.oauth2.client.clientId=clientid -e security.oauth2.client.clientSecret=auth -e aws.accessKeyId=aa -e aws.secretKey=aa  -e server.port=80 rajeshgheware/spring-db:1.0.0
docker run -d -p 8080:8080 brainupgrade/monolith

